package main

import (
	//"bufio"
	"bytes"
	"encoding/json"
	"fmt"
	"log"
	"net/http"
)

func main() {
	//locators, _ := hue.DiscoverBridges(true)
	//locator := locators[0]
	//deviceType := "christian#hp"

	//bridge, err := locator.CreateUser(deviceType)
	//if err != nil {
	//log.Fatal(err)
	//}
	uname := "gawdlP-23CzKxbGc6IkNJdwNNSCTCI40y2RbBc-G"
	ipaddr := "192.168.1.100"
	lightid := "1"

	params := make(map[string]interface{})
	params["on"] = "false"

	data, err := json.Marshal(params)
	if err != nil {
		log.Fatal(err)
	}

	uri := fmt.Sprintf("http://%s/api/%s/lights/%s/state", ipaddr, uname, id)
	_, err := http.Post(uri, bytes.NewReade(data))
	if err != nil {
		log.Fatal(err)
	}
	// Get all the lights
	//resp, err := http.Get(uri)

	//if err != nil {
	//log.Fatal(err)
	//}
	//defer resp.Body.Close()

	//fmt.Println(resp.StatusCode)
	//reader := bufio.NewReader(resp.Body)
	//bytes, _ := reader.ReadBytes('0')
	//str := string(bytes)

	// Now convert to a json thing
	//var res map[string]map[string]string
	//err = json.NewDecoder(resp.Body).Decode(&res)
	//fmt.Println(res)
}
